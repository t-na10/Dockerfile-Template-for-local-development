{
    "name": "My Python Dev Container",
    "build": {
        "dockerfile": "../docker/Dockerfile"
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "MS-CEINTL.vscode-language-pack-ja",
                "ms-azuretools.vscode-docker",
                "GitHub.vscode-pull-request-github",
                "eamodio.gitlens",
                "mhutchie.git-graph",
                "ms-toolsai.jupyter",
                "ms-toolsai.vscode-jupyter-cell-tags",
                "ms-toolsai.jupyter-keymap",
                "ms-toolsai.jupyter-renderers",
                "ms-toolsai.vscode-jupyter-slideshow",
                "ms-python.python",
                "ms-python.vscode-pylance",
                "KevinRose.vsc-python-indent",
                "njpwerner.autodocstring",
                "ms-python.flake8",
                "ms-python.isort",
                "shardulm94.trailing-spaces",
                "oderwat.indent-rainbow",
                "Gruntfuggly.todo-tree"
            ],
            "settings": {
                "[python]": {
                    "editor.defaultFormatter": "ms-python.black-formatter",
                    "editor.formatOnSave": true,
                    "editor.formatOnPaste": true,
                    "editor.formatOnType": true,
                    "files.trimTrailingWhitespace": true,
                    "files.insertFinalNewline": true
                },
                "flake8.args": [
                    "--max-complexity=10",
                    "--max-line-length=127",
                    "--extend-ignore=E203,DOC301"
                ],
                "black-formatter.args": [
                    "--line-length=127"
                ],
                "isort.args": [
                    "--profile=black",
                    "--line-length=127"
                ],
                "editor.codeActionsOnSave": {
                    "source.organizeImports": "explicit"
                },
                "notebook.formatOnSave.enabled": true
            }
        }
    },
    "postCreateCommand": "pip install --no-cache-dir -r docker/requirements.txt",
    "workspaceFolder": "/work",
    "workspaceMount": "source=${localWorkspaceFolder},target=/work,type=bind"
}